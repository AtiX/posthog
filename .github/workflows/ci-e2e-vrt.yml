name: E2E Visual Regression Tests

on:
    pull_request:
    push:
        branches:
            - master

permissions:
    id-token: write
    contents: read
    pages: write

jobs:
    playwright:
        name: Visual Regression Tests
        runs-on: ubuntu-20.04
        container:
            image: mcr.microsoft.com/playwright:v1.28.1-focal
        steps:
            - uses: actions/checkout@v3

            - name: Install pnpm
              uses: pnpm/action-setup@v2
              with:
                  version: 7.x.x

            - name: Set up Node.js
              uses: actions/setup-node@v3
              with:
                  node-version: 18
                  cache: pnpm

            - name: Install package.json dependencies with pnpm
              run: pnpm install --frozen-lockfile

            - name: Install CI utilities with pnpm
              run: pnpm install concurrently http-server wait-on

            - name: Build Storybook
              run: pnpm build-storybook --quiet

            - name: Serve Storybook and run tests
              run: |
                  pnpm exec concurrently -k -s first -n "SRVR,TEST" -c "magenta,blue" \
                    "pnpm exec http-server storybook-static --port 6006" \
                    "pnpm exec wait-on http://127.0.0.1:6006 --timeout 60 && pnpm exec playwright test"

            - name: Upload Playwright report
              uses: actions/upload-artifact@v3
              if: always()
              with:
                  name: playwright-report
                  path: |
                      playwright-report/
                      test-results/
                  retention-days: 7

    publish_report:
        name: Publish HTML Report
        # using always() is not ideal here, because it would also run if the workflow was cancelled
        if: "success() || needs.playwright.result == 'failure'"
        needs: [playwright]
        runs-on: ubuntu-latest
        continue-on-error: true
        env:
            # Unique URL path for each workflow run attempt
            HTML_REPORT_URL_PATH: reports/${{ github.ref_name }}/${{ github.run_id }}/${{ github.run_attempt }}
        steps:
            - name: Checkout GitHub Pages Branch
              uses: actions/checkout@v2
              with:
                  ref: gh-pages
            - name: Set Git User
              # see: https://github.com/actions/checkout/issues/13#issuecomment-724415212
              run: |
                  git config --global user.name "github-actions[bot]"
                  git config --global user.email "41898282+github-actions[bot]@users.noreply.github.com"
            - name: Download zipped HTML report
              uses: actions/download-artifact@v2
              with:
                  name: playwright-report
                  path: ${{ env.HTML_REPORT_URL_PATH }}
            - name: Push HTML Report
              timeout-minutes: 3
              # commit report, then try push-rebase-loop until it's able to merge the HTML report to the gh-pages branch
              # this is necessary when this job is running at least twice at the same time (e.g. through two pushes at the same time)
              run: |
                  git add .
                  git commit -m "workflow: add HTML report for run-id ${{ github.run_id }} (attempt:  ${{ github.run_attempt }})"

                  while true; do
                    git pull --rebase
                    if [ $? -ne 0 ]; then
                      echo "Failed to rebase. Please review manually."
                      exit 1
                    fi

                    git push
                    if [ $? -eq 0 ]; then
                      echo "Successfully pushed HTML report to repo."
                      exit 0
                    fi
                  done
            - name: Output Report URL as Worfklow Annotation
              run: |
                  FULL_HTML_REPORT_URL=https://ysfaran.github.io/playwright-gh-actions-gh-pages/$HTML_REPORT_URL_PATH

                  echo "::notice title=ðŸ“‹ Published Playwright Test Report::$FULL_HTML_REPORT_URL"
