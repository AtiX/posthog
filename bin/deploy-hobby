#!/usr/bin/env bash

set -e

POSTHOG_SECRET=$(head -c 28 /dev/urandom | sha224sum -b | head -c 56)
export POSTHOG_SECRET

# send log of this install for continued support!
# curl -s -L --header "Content-Type: application/json" -d '{
#     "api_key": "sTMFPsFhdP1Ssg",
#     "type": "capture",
#     "event": "magic_curl_install"
# }' https://app.posthog.com/batch/ > /dev/null


# update apt cache
echo "Grabbing latest apt caches..."
sudo apt update

# clone posthog
echo "Cloning PostHog ðŸ¦” from Github..."
sudo apt install -y git
# try to clone - if folder is already there pull latest for that branch
git clone https://github.com/PostHog/posthog.git &> /dev/null || true
cd posthog
git checkout tags/1.39.1
cd ..

cat > Caddyfile <<EOT
# replace :80 with your domain name to get automatic https via LetsEncrypt
:80 {
  reverse_proxy http://web:8000
}
EOT

# start up the stack
rm -f docker-compose.yml
curl -s -S -o docker-compose.hobby.yml https://raw.githubusercontent.com/PostHog/posthog/master/docker-compose.hobby.yml > /dev/null
envsubst < docker-compose.hobby.yml > docker-compose.yml
rm docker-compose.hobby.yml

echo "ðŸŽ‰ðŸŽ‰ðŸŽ‰ Welcome to PostHog! ðŸŽ‰ðŸŽ‰ðŸŽ‰"
echo ""
echo "Starting the stack"
echo "---"
echo "To start the stack run 'docker compose up -d'"
echo "After waiting a couple of minutes for migrations to finish, you'll be able to access PostHog on http://localhost:8000"
echo ""
echo "Stopping the stack"
echo "---"
echo "To stop the stack run 'docker compose stop'"
echo "To start the stack again run 'docker compose start'"
echo "If you have any issues at all delete everything in this directory and run the curl command again"
echo ""
echo 'To upgrade: run /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/posthog/posthog/HEAD/bin/upgrade-hobby)"'
echo ""
echo "PostHog will be up at http://localhost:8000!"
echo ""
echo "It's dangerous to go alone! Take this: ðŸ¦”"
