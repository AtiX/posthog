openapi: 3.0.3
info:
    title: Customer Data Pipeline
    version: 0.0.1
    description: |
        The Customer Data Pipeline (CDP) is a service that allows users to
        upload data to the platform. It allows users to specify `Destination`s
        to which the data should be sent, and `Source`s from which the data is
        sent from the client.

        Destinations can be of type 'webhook' only currently. The CDP service
        will send a POST request to the webhook URL with the data in the body
        of the request. A basic transformation can be specified to transform
        event data into the format required by the destination.

paths:
    /api/projects/{project_id}/destinations:
        get:
            summary: List destinations
            description: |
                List all destinations for a project.
            operationId: listDestinations
            parameters:
                - name: project_id
                  in: path
                  description: ID of the project
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: List of destinations
                    content:
                        application/json:
                            schema:
                                type: array
                                items:
                                    allOf:
                                        - $ref: '#/components/schemas/DestinationData'
                                        - $ref: '#/components/schemas/DestinationMetadata'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Project not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        post:
            summary: Create a destination
            description: |
                Create a destination for a project.
            operationId: createDestination
            parameters:
                - name: project_id
                  in: path
                  description: ID of the project
                  required: true
                  schema:
                      type: string
            requestBody:
                description: Destination to create
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DestinationData'
            responses:
                '201':
                    description: Destination created
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/DestinationData'
                                    - $ref: '#/components/schemas/DestinationMetadata'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Project not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
    /api/projects/{project_id}/destinations/{destination_id}:
        get:
            summary: Get a destination
            description: |
                Get a destination for a project.
            operationId: getDestination
            parameters:
                - name: project_id
                  in: path
                  description: ID of the project
                  required: true
                  schema:
                      type: string
                - name: destination_id
                  in: path
                  description: ID of the destination
                  required: true
                  schema:
                      type: string
            responses:
                '200':
                    description: Destination
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/DestinationData'
                                    - $ref: '#/components/schemas/DestinationMetadata'

                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Project or destination not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        put:
            summary: Update a destination
            description: |
                Update a destination for a project.
            operationId: updateDestination
            parameters:
                - name: project_id
                  in: path
                  description: ID of the project
                  required: true
                  schema:
                      type: string
                - name: destination_id
                  in: path
                  description: ID of the destination
                  required: true
                  schema:
                      type: string
            requestBody:
                description: Destination to update
                required: true
                content:
                    application/json:
                        schema:
                            $ref: '#/components/schemas/DestinationData'
            responses:
                '200':
                    description: Destination updated
                    content:
                        application/json:
                            schema:
                                allOf:
                                    - $ref: '#/components/schemas/DestinationData'
                                    - $ref: '#/components/schemas/DestinationMetadata'
                '400':
                    description: Bad request
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/CreateError'
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Project or destination not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
        delete:
            summary: Delete a destination
            description: |
                Delete a destination for a project.
            operationId: deleteDestination
            parameters:
                - name: project_id
                  in: path
                  description: ID of the project
                  required: true
                  schema:
                      type: string
                - name: destination_id
                  in: path
                  description: ID of the destination
                  required: true
                  schema:
                      type: string
            responses:
                '204':
                    description: Destination deleted
                '401':
                    description: Unauthorized
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '403':
                    description: Forbidden
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '404':
                    description: Project or destination not found
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'
                '500':
                    description: Internal server error
                    content:
                        application/json:
                            schema:
                                $ref: '#/components/schemas/Error'

components:
    schemas:
        DestinationData:
            type: object
            properties:
                type:
                    type: string
                    description: Type of the destination
                    enum: [webhook]
                name:
                    type: string
                    description: Name of the destination
                description:
                    type: string
                    description: Description of the destination
                config:
                    type: object
                    description: |
                        Configuration of the destination. At the moment only
                        supports webhook config. As we are hardcoding the types
                        that are available, we are also hardcoding the schema.
                        This may well change in the future but in reality the
                        addition of new destination types and config will likely
                        also include a code component.
                    properties:
                        url:
                            type: string
                            description: URL to send the webhook to
                        headers:
                            type: array
                            description: Headers to send with the webhook
                            items:
                                type: object
                                properties:
                                    key:
                                        type: string
                                        description: Header key
                                    value:
                                        type: string
                                        description: Header value
        DestinationMetadata:
            type: object
            properties:
                stats:
                    type: object
                    description: Destination statistics
                    properties:
                        events_sent_last_24_hours:
                            type: integer
                            description: Number of events sent in the last 24 hours
                        failures_last_24_hours:
                            type: integer
                            description: Number of failures in the last 24 hours
                        successes_last_24_hours:
                            type: integer
                            description: Number of successes in the last 24 hours
                created_at:
                    type: string
                    format: date-time
                    description: Date and time when the destination was created
                updated_at:
                    type: string
                    format: date-time
                    description: Date and time when the destination was updated
        Error:
            type: object
            properties:
                message:
                    type: string
                    description: Error message

        CreateError:
            type: object
            properties:
                message:
                    type: string
                    description: Error message
                errors:
                    type: array
                    description: List of errors
                    items:
                        type: object
                        properties:
                            field:
                                type: string
                                description: Field with error
                            message:
                                type: string
                                description: Error message
