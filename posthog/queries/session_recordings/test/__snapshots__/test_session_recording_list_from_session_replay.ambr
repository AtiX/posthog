# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter
  '
  
  SELECT s.session_id,
         any(s.team_id),
         any(s.distinct_id),
         min(s.min_first_timestamp) as start_time,
         max(s.max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(s.first_url) as first_url,
         sum(s.click_count),
         sum(s.keypress_count),
         sum(s.mouse_activity_count),
         sum(s.active_milliseconds)/1000 as active_seconds,
         duration-active_seconds as inactive_seconds,
         sum(s.console_log_count) as console_log_count,
         sum(s.console_warn_count) as console_warn_count,
         sum(s.console_error_count) as console_error_count
  FROM session_replay_events s
  WHERE s.team_id = 2
    AND s.min_first_timestamp >= '2022-12-14 00:00:00'
    AND s.min_first_timestamp >= '2022-12-28 00:00:00'
    AND s.max_last_timestamp <= '2023-01-04 00:00:00'
    AND s.session_id in
      (select `$session_id` as session_id
       from
         (SELECT groupUniqArray(event) as event_names,
                 `$session_id`
          FROM events e PREWHERE team_id = 2
          AND e.timestamp >= '2022-12-14 00:00:00'
          AND e.timestamp <= now()
          WHERE notEmpty(`$session_id`)
            AND timestamp >= '2022-12-27 12:00:00'
            AND timestamp <= '2023-01-04 12:00:00'
            AND (((event = 'custom-event'
                   AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))
                        AND has(['test_action_filter-session-one'], "$session_id")
                        AND has(['test_action_filter-window-id'], "$window_id")))))
          GROUP BY `$session_id`
          HAVING 1=1
          AND hasAll(event_names, ['custom-event'])) as session_events_sub_query)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter.1
  '
  
  SELECT s.session_id,
         any(s.team_id),
         any(s.distinct_id),
         min(s.min_first_timestamp) as start_time,
         max(s.max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(s.first_url) as first_url,
         sum(s.click_count),
         sum(s.keypress_count),
         sum(s.mouse_activity_count),
         sum(s.active_milliseconds)/1000 as active_seconds,
         duration-active_seconds as inactive_seconds,
         sum(s.console_log_count) as console_log_count,
         sum(s.console_warn_count) as console_warn_count,
         sum(s.console_error_count) as console_error_count
  FROM session_replay_events s
  WHERE s.team_id = 2
    AND s.min_first_timestamp >= '2022-12-14 00:00:00'
    AND s.min_first_timestamp >= '2022-12-28 00:00:00'
    AND s.max_last_timestamp <= '2023-01-04 00:00:00'
    AND s.session_id in
      (select `$session_id` as session_id
       from
         (SELECT groupUniqArray(event) as event_names,
                 `$session_id`
          FROM events e PREWHERE team_id = 2
          AND e.timestamp >= '2022-12-14 00:00:00'
          AND e.timestamp <= now()
          WHERE notEmpty(`$session_id`)
            AND timestamp >= '2022-12-27 12:00:00'
            AND timestamp <= '2023-01-04 12:00:00'
            AND (((event = 'custom-event'
                   AND (has(['test_action_filter-session-one'], "$session_id")
                        AND has(['test_action_filter-window-id'], "$window_id")))))
          GROUP BY `$session_id`
          HAVING 1=1
          AND hasAll(event_names, ['custom-event'])) as session_events_sub_query)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter.2
  '
  
  SELECT s.session_id,
         any(s.team_id),
         any(s.distinct_id),
         min(s.min_first_timestamp) as start_time,
         max(s.max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(s.first_url) as first_url,
         sum(s.click_count),
         sum(s.keypress_count),
         sum(s.mouse_activity_count),
         sum(s.active_milliseconds)/1000 as active_seconds,
         duration-active_seconds as inactive_seconds,
         sum(s.console_log_count) as console_log_count,
         sum(s.console_warn_count) as console_warn_count,
         sum(s.console_error_count) as console_error_count
  FROM session_replay_events s
  WHERE s.team_id = 2
    AND s.min_first_timestamp >= '2022-12-14 00:00:00'
    AND s.min_first_timestamp >= '2022-12-28 00:00:00'
    AND s.max_last_timestamp <= '2023-01-04 00:00:00'
    AND s.session_id in
      (select `$session_id` as session_id
       from
         (SELECT groupUniqArray(event) as event_names,
                 `$session_id`
          FROM events e PREWHERE team_id = 2
          AND e.timestamp >= '2022-12-14 00:00:00'
          AND e.timestamp <= now()
          WHERE notEmpty(`$session_id`)
            AND timestamp >= '2022-12-27 12:00:00'
            AND timestamp <= '2023-01-04 12:00:00'
            AND (((event = 'custom-event'
                   AND (has(['test_action_filter-session-one'], "$session_id")
                        AND has(['test_action_filter-window-id'], "$window_id"))))
                 AND (has(['Firefox'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))))
          GROUP BY `$session_id`
          HAVING 1=1
          AND hasAll(event_names, ['custom-event'])) as session_events_sub_query)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
# name: TestClickhouseSessionRecordingsListFromSessionReplay.test_action_filter.3
  '
  
  SELECT s.session_id,
         any(s.team_id),
         any(s.distinct_id),
         min(s.min_first_timestamp) as start_time,
         max(s.max_last_timestamp) as end_time,
         dateDiff('SECOND', start_time, end_time) as duration,
         argMinMerge(s.first_url) as first_url,
         sum(s.click_count),
         sum(s.keypress_count),
         sum(s.mouse_activity_count),
         sum(s.active_milliseconds)/1000 as active_seconds,
         duration-active_seconds as inactive_seconds,
         sum(s.console_log_count) as console_log_count,
         sum(s.console_warn_count) as console_warn_count,
         sum(s.console_error_count) as console_error_count
  FROM session_replay_events s
  WHERE s.team_id = 2
    AND s.min_first_timestamp >= '2022-12-14 00:00:00'
    AND s.min_first_timestamp >= '2022-12-28 00:00:00'
    AND s.max_last_timestamp <= '2023-01-04 00:00:00'
    AND s.session_id in
      (select `$session_id` as session_id
       from
         (SELECT groupUniqArray(event) as event_names,
                 `$session_id`
          FROM events e PREWHERE team_id = 2
          AND e.timestamp >= '2022-12-14 00:00:00'
          AND e.timestamp <= now()
          WHERE notEmpty(`$session_id`)
            AND timestamp >= '2022-12-27 12:00:00'
            AND timestamp <= '2023-01-04 12:00:00'
            AND (((event = 'custom-event'
                   AND (has(['test_action_filter-session-one'], "$session_id")
                        AND has(['test_action_filter-window-id'], "$window_id"))))
                 AND (has(['Chrome'], replaceRegexpAll(JSONExtractRaw(properties, '$browser'), '^"|"$', ''))))
          GROUP BY `$session_id`
          HAVING 1=1
          AND hasAll(event_names, ['custom-event'])) as session_events_sub_query)
  GROUP BY session_id
  HAVING 1=1
  ORDER BY start_time DESC
  LIMIT 51
  OFFSET 0
  '
---
