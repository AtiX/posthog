# serializer version: 1
# name: TestSessionRecordings.test_can_get_all_data_response
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT pointer_target_fixed AS pointer_target_fixed,
         relative_client_x AS relative_client_x,
         client_y AS client_y,
         count() AS cnt
  FROM
    (SELECT heatmaps.pointer_target_fixed AS pointer_target_fixed,
            round(divide(heatmaps.x, heatmaps.viewport_width), 2) AS relative_client_x,
            multiply(heatmaps.y, heatmaps.scale_factor) AS client_y
     FROM heatmaps
     WHERE and(equals(heatmaps.team_id, 2), 1, greaterOrEquals(toTimeZone(heatmaps.timestamp, 'UTC'), toDate('2023-03-08')), equals(heatmaps.type, 'click'), equals(heatmaps.team_id, 2)))
  GROUP BY pointer_target_fixed,
           relative_client_x,
           client_y
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestSessionRecordings.test_can_get_empty_response
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT pointer_target_fixed AS pointer_target_fixed,
         relative_client_x AS relative_client_x,
         client_y AS client_y,
         count() AS cnt
  FROM
    (SELECT heatmaps.pointer_target_fixed AS pointer_target_fixed,
            round(divide(heatmaps.x, heatmaps.viewport_width), 2) AS relative_client_x,
            multiply(heatmaps.y, heatmaps.scale_factor) AS client_y
     FROM heatmaps
     WHERE and(equals(heatmaps.team_id, 2), 1, greaterOrEquals(toTimeZone(heatmaps.timestamp, 'UTC'), toDate('2024-04-05')), equals(heatmaps.type, 'click'), equals(heatmaps.team_id, 2)))
  GROUP BY pointer_target_fixed,
           relative_client_x,
           client_y
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestSessionRecordings.test_can_get_filter_by_click
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT pointer_target_fixed AS pointer_target_fixed,
         relative_client_x AS relative_client_x,
         client_y AS client_y,
         count() AS cnt
  FROM
    (SELECT heatmaps.pointer_target_fixed AS pointer_target_fixed,
            round(divide(heatmaps.x, heatmaps.viewport_width), 2) AS relative_client_x,
            multiply(heatmaps.y, heatmaps.scale_factor) AS client_y
     FROM heatmaps
     WHERE and(equals(heatmaps.team_id, 2), 1, greaterOrEquals(toTimeZone(heatmaps.timestamp, 'UTC'), toDate('2023-03-08')), equals(heatmaps.type, 'click'), equals(heatmaps.team_id, 2)))
  GROUP BY pointer_target_fixed,
           relative_client_x,
           client_y
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestSessionRecordings.test_can_get_filter_by_click.1
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT pointer_target_fixed AS pointer_target_fixed,
         relative_client_x AS relative_client_x,
         client_y AS client_y,
         count() AS cnt
  FROM
    (SELECT heatmaps.pointer_target_fixed AS pointer_target_fixed,
            round(divide(heatmaps.x, heatmaps.viewport_width), 2) AS relative_client_x,
            multiply(heatmaps.y, heatmaps.scale_factor) AS client_y
     FROM heatmaps
     WHERE and(equals(heatmaps.team_id, 2), 1, greaterOrEquals(toTimeZone(heatmaps.timestamp, 'UTC'), toDate('2023-03-08')), equals(heatmaps.type, 'rageclick'), equals(heatmaps.team_id, 2)))
  GROUP BY pointer_target_fixed,
           relative_client_x,
           client_y
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
# name: TestSessionRecordings.test_can_get_filter_by_date_from
  '''
  /* user_id:0 request:_snapshot_ */
  SELECT pointer_target_fixed AS pointer_target_fixed,
         relative_client_x AS relative_client_x,
         client_y AS client_y,
         count() AS cnt
  FROM
    (SELECT heatmaps.pointer_target_fixed AS pointer_target_fixed,
            round(divide(heatmaps.x, heatmaps.viewport_width), 2) AS relative_client_x,
            multiply(heatmaps.y, heatmaps.scale_factor) AS client_y
     FROM heatmaps
     WHERE and(equals(heatmaps.team_id, 2), 1, greaterOrEquals(toTimeZone(heatmaps.timestamp, 'UTC'), toDate('2023-03-08')), equals(heatmaps.type, 'click'), equals(heatmaps.team_id, 2)))
  GROUP BY pointer_target_fixed,
           relative_client_x,
           client_y
  LIMIT 100 SETTINGS readonly=2,
                     max_execution_time=60,
                     allow_experimental_object_type=1
  '''
# ---
